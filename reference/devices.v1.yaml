openapi: 3.0.0
info:
  title: Devices
  version: '1.0'
  description: |-
    <span style="font-size: 3em; color: #5D535E;">
      <i class="fas fa-robot fa-2x"></i>
    </span> 

    Interact with the `'Devices Service'` API to get a list of registered devices, add or remove devices and updating existing records.

    Use this API to leverage __*CloudHome*__'s central repository of devices that will then allow users to manage automation systems at home, at work or on the go.

    <ul class="fa-ul" style="padding-top:20px;">
      <li><span class="fa-li"><i class="fas fa-check-square"></i></span>Register a device</li>
      <li><span class="fa-li"><i class="fas fa-check-square"></i></span>Apply custom runtime settings</li>
      <li><span class="fa-li"><i class="fas fa-spinner fa-pulse"></i></span>Sync devices</li>
      <li><span class="fa-li"><i class="far fa-square"></i></span>Invite friends to <strong>CloudHome<strong></li>
    </ul>

    Our documentation will provide everything you need to get started right away. Make requests to our endpoints or use the built-in mocks.

    ```json http
    {
      "method": "get",
      "url": "https://cloudhome.io/api/devices/abc/home",
      "headers": {
        "API Key": "123"
      }
    }
    ```

    We also provide code generation to get your project started as soon as you imagine it!

    ```javascript
    var data = null;

    var xhr = new XMLHttpRequest();
    xhr.withCredentials = true;

    xhr.addEventListener("readystatechange", function () {
      if (this.readyState === this.DONE) {
        console.log(this.responseText);
      }
    });

    xhr.open("GET", "https://cloudhome.io/api/devices/abc/home");
    xhr.setRequestHeader("api key", "123");

    xhr.send(data);
    ```

    <i class="fas fa-quote-left fa-2x fa-pull-left"></i>
    __*CloudHome*__ is the world's best device management and home automation solution. Our `API`s are just as great as our user-friendly UI, making us the first choice for systems integrators around the world. Bring the power of IOT to your life with __*CloudHome*__.
  contact:
    name: Stephen Price
    url: 'https://www.linkedin.com/in/slprice/'
    email: stephen@stoplight.io
  termsOfService: cloudhome.io/api/devices/terms
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'https://cloudhome.io'
    description: CloudHome device platform
paths:
  '/api/devices/{accountid}':
    get:
      summary: getDevices
      tags:
        - devices
        - IOT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/device.v1.json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
      operationId: get-api-devices
      description: |-
        <span style="font-size: 1.5em; color: #5D535E;">
          <i class="fas fa-robot fa-xs fa-pulse"></i> getDevices
        </span>

        Returns a list of devices for an account at a given space (or all locations if using the default value `'all'`). A valid `'CloudHome Key'` is required to authenticate, users must also specify their `'accountid'` when requesting devices. The response can be further defined by limiting the number of results or sorting them as required.

        If a single device is desired, users can specify the `'deviceid'` or multiple values in the header.

        More information about required parameters and authentication can be seen below.
      parameters:
        - $ref: '#/components/parameters/spaceid'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/deviceid'
    post:
      summary: newDevice
      tags:
        - devices
        - IOT
      responses: {}
      operationId: post-api-devices
      description: |-
        <span style="font-size: 1.5em; color: #5D535E;">
          <i class="fas fa-robot fa-xs fa-pulse"></i> newDevice
        </span>

        Add new devices to the CloudHome service cloud. A valid `'CloudHome Key'` is required to authenticate, users must also specify their `'accountid'` when posting new devices. Users are limited to posting _**10 devices per request**_, further quantities of devices must be paginated.

        More information about required parameters and authentication can be seen below.
      parameters:
        - $ref: '#/components/parameters/spaceid'
        - $ref: '#/components/parameters/deviceName'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    put:
      summary: updateDevice
      tags:
        - devices
        - IOT
      responses: {}
      operationId: put-api-devices
    delete:
      summary: removeDevice
      tags:
        - devices
        - IOT
      responses: {}
      operationId: delete-api-devices
    parameters:
      - $ref: '#/components/parameters/accountid'
components:
  schemas: {}
  parameters:
    accountid:
      schema:
        type: string
        example: jetsonsFutureHome
      name: accountid
      in: path
      required: true
      description: unique per account (see `'My Account'` for more information)
    spaceid:
      schema:
        type: string
        example: seattle-office
        default: all
      in: query
      name: spaceid
      description: location associated with the devices (see `'My Spaces'` for more information)
      allowEmptyValue: true
    deviceName:
      schema:
        type: string
        default: newDevice
        example: garageCamera
      in: header
      name: deviceName
      description: devices in the same space require unique names or will be assigned the default name `'newDevice'`
      allowEmptyValue: true
    deviceid:
      schema:
        type: string
        default: all
        example: 123abc
      in: header
      name: deviceid
      description: unique identifiers for devices registered on the service cloud, when empty it defaults to `'all'`
      allowEmptyValue: true
      required: true
    sort:
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
        example: asc
      in: query
      name: sort
      allowEmptyValue: true
      description: will sort objects returned from the request
    limit:
      schema:
        type: integer
        default: 10
        format: int32
        example: 15
        maximum: 25
        minimum: 1
      in: query
      name: limit
      allowEmptyValue: true
      description: specify the number of results returned from the request
  securitySchemes:
    CloudHome Key:
      name: API Key
      type: apiKey
      in: header
      description: Provided upon account registration (see `'My Account'` for more information). API Keys can be used as Basic HTTP Authentication credentials and provide a substitute for the account's actual username and password. API Keys are only available to team accounts and there is only 1 key per account. API Keys do not support scopes and have therefore access to all contents of the account.
    HTTP Auth:
      type: http
      scheme: basic
      description: 'Basic HTTP Authentication as per [RFC-2617](https://tools.ietf.org/html/rfc2617) (Digest not supported). Note that Basic Auth with username and password as credentials is only available on accounts that have 2-factor-auth / 2-step-verification disabled. If you use 2fa, you should authenticate using OAuth2 instead.'
    OAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://cloudhome.io/oauth2/authorize'
          tokenUrl: 'https://cloudhome.io/oauth2/token'
          scopes:
            'devices:write': Read and modify your devices
            'locations:write': Read and modify your locations
            'accounts:write': Read and modify your accounts
            'users:write': Read and modify your users
            'devices:delete': Delete your devices
            'locations:delete': Delete your locations
            'users:delete': Delete your users
          refreshUrl: 'https://cloudhome.io/oauth2/refresh'
        implicit:
          authorizationUrl: 'https://cloudhome.io/oauth2/authorize'
          refreshUrl: 'https://cloudhome.io/oauth2/refresh'
          scopes:
            'devices:write': Read and modify your devices
            'locations:write': Read and modify your locations
            'accounts:write': Read and modify your accounts
            'users:write': Read and modify your users
            'devices:delete': Delete your devices
            'locations:delete': Delete your locations
            'users:delete': Delete your users
      description: 'OAuth 2 as per [RFC-6749](https://tools.ietf.org/html/rfc6749). OAuth2 is a protocol that lets external apps request authorization to private details in a user''s CloudHome account without getting their password. This is preferred over Basic Authentication because tokens can be limited to specific types of data, and can be revoked by users at any time.'
    OpenID Connect:
      type: openIdConnect
      openIdConnectUrl: 'https://cloudhome.io/auth/openid-configuration'
      description: ''
security:
  - CloudHome Key: []
tags:
  - name: devices
    description: relative to device management
    externalDocs:
      url: 'https://cloudhome.io/api/tags/devices'
  - name: IOT
    description: relative to devices and the 'internet of things'
    externalDocs:
      url: 'https://cloudhome.io/api/tags/IOT'
